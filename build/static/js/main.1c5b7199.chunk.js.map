{"version":3,"sources":["services/observations.js","components/ObservationForm.js","components/Map.js","components/ObservationCard.js","components/ListingPage.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","headers","Content-Type","sent","abrupt","data","stop","this","apply","arguments","getOne","_ref2","_callee2","id","_context2","concat","_x","observations","create","_ref3","_callee3","newObject","_context3","post","_x2","remove","_ref4","_callee4","_context4","delete","_x3","ObservationForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCurrentPosition","options","length","undefined","Promise","resolve","reject","navigator","geolocation","loadPosition","position","_position$coords","latitude","longitude","coords","t0","console","log","addObservation","event","newObservation","savedObservation","preventDefault","species","state","rarity","notes","time","Date","observationService","updateObservations","setState","returnToIndex","handleChange","defineProperty","target","name","value","react_default","createElement","Redirect","to","NavLink","onSubmit","onChange","key","type","React","Component","Map","lat","parseFloat","lng","_this2","MapWithMarker","withGoogleMap","react_google_maps_lib","defaultCenter","defaultZoom","containerElement","style","height","width","marginLeft","marginRight","mapElement","ObservationCard","resize","objectSpread","observation","extended","window","addEventListener","removeEventListener","lib","className","onClick","toggleExtended","cursor","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","components_Map","substring","ListingPage","sortedBy","sortNo","sortObservations","sortWith","sortedObservations","sort","b","toString","toUpperCase","sorted","changeSorting","map","obs","components_ObservationCard","App","catch","error","JSON","parse","localStorage","getItem","localObservations","setItem","stringify","push","BrowserRouter","Route","exact","path","render","components_ListingPage","components_ObservationForm","bind","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","URL","process","href","origin","request","method","respondWith","fetch","clone","newPost","each","val","substr","store","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1c5b7199.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://birdnation.herokuapp.com/api/observations'\r\n\r\nconst config = () => {\r\n    return {\r\n        headers: { 'Content-Type': 'Application/json' }\r\n    }\r\n}\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl, config())\r\n    return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`, config())\r\n    return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n    const response = await axios.post(baseUrl, newObject, config())\r\n    return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config())\r\n    return response\r\n}\r\n\r\nexport default { getAll, create, remove, getOne }","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport observationService from '../services/observations';\r\n\r\nclass ObservationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            species: '',\r\n            rarity: 'Common',\r\n            notes: '',\r\n            returnToIndex: false\r\n        }\r\n    }\r\n\r\n    getCurrentPosition = (options = {}) => {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n        })\r\n    }\r\n\r\n    loadPosition = async () => {\r\n        try {\r\n            const position = await this.getCurrentPosition()\r\n            const { latitude, longitude } = position.coords\r\n            return { latitude, longitude }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    addObservation = async (event) => {\r\n        event.preventDefault()\r\n        const position = await this.loadPosition()\r\n        const newObservation = {\r\n            species: this.state.species,\r\n            rarity: this.state.rarity,\r\n            notes: this.state.notes,\r\n            latitude: position.latitude,\r\n            longitude: position.longitude,\r\n            time: new Date()\r\n        }\r\n\r\n        const savedObservation = await observationService.create(newObservation)\r\n        this.props.updateObservations(savedObservation)\r\n        await this.setState({ returnToIndex: true })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.returnToIndex) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div>\r\n                \r\n                <NavLink to='/'>Cancel</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                <form onSubmit={this.addObservation}>\r\n                    <label>Species</label>\r\n                    <br></br>\r\n                    <input name='species' value={this.state.value} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Rarity</label>\r\n                    <br></br>\r\n                    <select name='rarity' value={this.state.rarity} onChange={this.handleChange}>\r\n                        <option key='Common' value='Common'>Common</option>\r\n                        <option key='Rare' value='Rare'>Rare</option>\r\n                        <option key='Extremely rare' value='Extremely rare'>Extremenly rare</option>\r\n                    </select>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Notes</label>\r\n                    <br></br>\r\n                    <input type='textarea' name='notes' value={this.state.notes} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <input type='submit' value='Submit'></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationForm","import React from 'react'\r\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lat: parseFloat(this.props.lat),\r\n            lng: parseFloat(this.props.lng)\r\n        }\r\n    }\r\n\r\n    \r\n  render() {\r\n    const MapWithMarker = withGoogleMap(props => (\r\n        <GoogleMap\r\n          defaultCenter = { this.state }\r\n          defaultZoom = { 10 }\r\n          mark\r\n        >\r\n        <Marker position={ this.state } />\r\n        </GoogleMap>\r\n     ));\r\n     \r\n    return (\r\n      <div>\r\n        <MapWithMarker\r\n          containerElement={ <div style={{ height: `250px`, width: '250px', marginLeft: 'auto', marginRight: 'auto' }} /> }\r\n          mapElement={ <div style={{ height: `100%` }} /> }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { Card, CardBody } from 'react-simple-card';\r\nimport Map from './Map';\r\nimport React from 'react';\r\n\r\nclass ObservationCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ...props.observation, extended: false\r\n        }\r\n    }\r\n\r\n    resize = () => {\r\n        this.setState(this.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    toggleExtended() {\r\n        this.setState({ ...this.state, extended: !this.state.extended })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.extended ?\r\n                    <Card className='cardReact'>\r\n                        <div onClick={() => this.toggleExtended()} >\r\n                        <h4>{this.state.species}</h4>\r\n                        \r\n                        <CardBody>\r\n                            <div onClick={() => this.toggleExtended()} style={{ cursor: \"pointer\" }}>\r\n                            Rarity: {this.state.rarity}<br></br>\r\n                            Location: {this.state.latitude}, {this.state.longitude}<br></br>\r\n                            Notes: {this.state.notes}<br></br>\r\n                            Observed: {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                second: '2-digit'\r\n\r\n                            }).format(new Date(this.state.time))}<br></br>\r\n                            </div>\r\n                            \r\n                        </CardBody>\r\n                        </div>\r\n                        <Map lat={this.state.latitude} lng={this.state.longitude}/>\r\n                    </Card>\r\n                    :\r\n                    <div onClick={() => this.toggleExtended()} >\r\n                    <Card className='cardReact'>\r\n                        <h4>{this.state.species}</h4> <br></br>\r\n                        {this.state.notes.substring(0, 15)}...\r\n                    </Card>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationCard","import React from 'react';\r\nimport ObservationCard from './ObservationCard';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass ListingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            observations: this.props.observations,\r\n            sortedBy: ['time (newest)', 'time (oldest)', 'species', 'rarity'],\r\n            sortNo: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sortObservations()\r\n    }\r\n\r\n    sortObservations() {\r\n        const sortWith = this.state.sortedBy[this.state.sortNo];\r\n        let sortedObservations = this.state.observations\r\n        switch (sortWith) {\r\n            case 'time (newest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) > new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) < new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'time (oldest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) < new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) > new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'species':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.species.toString().toUpperCase() < b.species.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.species.toString().toUpperCase() > b.species.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'rarity':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.rarity.toString().toUpperCase() < b.rarity.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.rarity.toString().toUpperCase() > b.rarity.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        this.setState({ observations: sortedObservations, sorted: true })\r\n    }\r\n\r\n    async changeSorting() {\r\n        if (this.state.sortNo < 3) {\r\n            await this.setState({ sortNo: this.state.sortNo + 1 })\r\n        } else {\r\n            await this.setState({ sortNo: 0 })\r\n        }\r\n        this.sortObservations()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink to='/newobservation'>New observation</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                <button onClick={() => this.changeSorting()}>Sort by: {this.state.sortedBy[this.state.sortNo]}</button>\r\n                <br></br>\r\n                <br></br>\r\n                {this.state.observations.map(obs => <ObservationCard observation={obs} key={obs.id} />)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListingPage","import React from 'react';\nimport observationService from './services/observations';\nimport './App.css';\nimport ObservationForm from './components/ObservationForm';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport ListingPage from './components/ListingPage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      observations: null\n    }\n  }\n\n\n  async componentDidMount() {\n    let obs = []\n    obs = await observationService.getAll()\n      .catch(error => {\n        return JSON.parse(window.localStorage.getItem('observations'))\n      })\n    const localObservations = JSON.parse(window.localStorage.getItem('observations'))\n    if (obs !== localObservations && obs.length > 0) {\n      window.localStorage.setItem('observations', JSON.stringify(obs))\n      await this.setState({ observations: obs })\n    } else {\n      if (localObservations) {\n        await this.setState({ observations: localObservations })\n      } else {\n        await this.setState({ observations: [] })\n      }\n    }\n  }\n\n  updateObservations(newObservation) {\n    const obs = this.state.observations\n    obs.push(newObservation)\n    window.localStorage.setItem('observations', JSON.stringify(obs))\n    this.setState({ observations: obs })\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <h1>Birdnation</h1>\n            {this.state.observations && this.state.observations.length > 0 ?\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <ListingPage observations={this.state.observations}\n                    key='listingpage' />)}\n              />\n              :\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <div>\n                    <NavLink to='/newobservation'>New observation</NavLink>\n                    <br></br>\n                    <br></br>\n                    <p>No observations</p>\n                  </div>\n                )}\n              />\n\n            }\n            <Route\n              exact\n              path='/newobservation'\n              render={() => (\n                <ObservationForm updateObservations={this.updateObservations.bind(this)}\n                  key='newobservation' />)}\n            />\n\n\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('fetch', (event) => {\n      if (event.request.method === \"POST\") {\n        event.respondWith(\n          // First try to fetch the request from the server\n          fetch(event.request.clone())\n            .catch(() => {\n              store()\n            })\n        );\n      }\n    });\n\n    function store() {\n      var newPost = \"\"; // Inputted values\n      // Iterate through the inputs\n      (\"input\").each(function () {\n        newPost += (this).val() + \",\";\n      });\n      // Get rid of the last comma\n      newPost = newPost.substr(0, newPost.length - 1);\n      // Store the data\n      localStorage.setItem('newPost', newPost);\n    };\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nserviceWorker.register();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}