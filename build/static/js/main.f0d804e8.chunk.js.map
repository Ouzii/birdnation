{"version":3,"sources":["services/observations.js","validators/observationValidator.js","components/ObservationForm.js","components/Map.js","components/ObservationCard.js","components/ListingPage.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","interceptors","request","use","config","method","navigator","onLine","window","dispatchEvent","CustomEvent","detail","error","Promise","reject","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","get","headers","Content-Type","sent","abrupt","data","stop","this","apply","arguments","getOne","_ref2","_callee2","id","_context2","concat","_x","observations","create","_ref3","_callee3","newObject","_context3","post","_x2","remove","_ref4","_callee4","_context4","delete","_x3","validateSpecies","species","validator","isEmpty","toString","isNumeric","length","validateNotes","notes","validateObservation","observation","errorArray","errors","forEach","ObservationForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCurrentPosition","options","undefined","resolve","geolocation","loadPosition","position","_position$coords","latitude","longitude","coords","t0","console","log","addObservation","event","newObservation","preventDefault","state","rarity","time","Date","setState","setTimeout","observationService","then","savedObservation","updateObservations","catch","objectSpread","Math","floor","random","returnToIndex","handleChange","defineProperty","target","name","value","_this2","react_default","createElement","Redirect","to","NavLink","map","className","key","type","onClick","onSubmit","onChange","React","Component","Map","lat","parseFloat","lng","MapWithMarker","withGoogleMap","react_google_maps_lib","defaultCenter","defaultZoom","containerElement","style","height","width","marginLeft","marginRight","mapElement","ObservationCard","resize","extended","addEventListener","removeEventListener","lib","toggleExtended","cursor","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","components_Map","substring","ListingPage","sortedBy","sortNo","sortObservations","nextProps","sortWith","sortedObservations","sort","b","toUpperCase","changeSorting","obs","components_ObservationCard","App","_obs","postedObs","newStateObservations","JSON","parse","localStorage","getItem","toConsumableArray","removeItem","localObservations","setItem","stringify","push","_this3","BrowserRouter","Route","exact","path","render","components_ListingPage","components_ObservationForm","bind","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f0d804e8.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://birdnation.herokuapp.com/api/observations'\r\n\r\n  axios.interceptors.request.use(function (config) {\r\n    if (config.method === 'post' && !navigator.onLine) {\r\n        window.dispatchEvent(new CustomEvent('axios', { detail: config }))\r\n    }\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\nconst config = () => {\r\n    return {\r\n        headers: { 'Content-Type': 'Application/json' }\r\n    }\r\n}\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl, config())\r\n    return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`, config())\r\n    return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n    const response = await axios.post(baseUrl, newObject, config())\r\n    return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config())\r\n    return response\r\n}\r\n\r\nexport default { getAll, create, remove, getOne }","import validator from 'validator'\r\n\r\nconst validateObservation = (observation) => {\r\n    let errorArray = []\r\n\r\n    errorArray = errorArray.concat(validateSpecies(observation.species), validateNotes(observation.notes))\r\n\r\n    let errors = []\r\n\r\n    errorArray.forEach(error => {\r\n        if (error) {\r\n            errors = errors.concat(error)\r\n        }\r\n    })\r\n    return errors\r\n}\r\n\r\nconst validateSpecies = (species) => {\r\n    if(validator.isEmpty(species.toString()) || validator.isNumeric(species) || species.length > 60) {\r\n        return 'Observation has to be 1-60 characters long and must not be numeric'\r\n    }\r\n    return\r\n}\r\n\r\nconst validateNotes = (notes) => {\r\n    if(notes.length > 600) {\r\n        return 'Notes are too long, maximum character length is 600'\r\n    }\r\n    return\r\n}\r\n\r\nexport default validateObservation","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport observationService from '../services/observations';\r\nimport validateObservation from '../validators/observationValidator';\r\n\r\nclass ObservationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            species: '',\r\n            rarity: 'Common',\r\n            notes: '',\r\n            returnToIndex: false,\r\n            errors: null\r\n        }\r\n    }\r\n\r\n    getCurrentPosition = (options = {}) => {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n        })\r\n    }\r\n\r\n    loadPosition = async () => {\r\n        try {\r\n            const position = await this.getCurrentPosition()\r\n            const { latitude, longitude } = position.coords\r\n            return { latitude, longitude }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    addObservation = async (event) => {\r\n        event.preventDefault()\r\n        const position = await this.loadPosition()\r\n        let newObservation = {\r\n            species: this.state.species,\r\n            rarity: this.state.rarity,\r\n            notes: this.state.notes,\r\n            latitude: position.latitude,\r\n            longitude: position.longitude,\r\n            time: new Date()\r\n        }\r\n\r\n        let errors = validateObservation(newObservation)\r\n\r\n        if (errors.length > 0) {\r\n            this.setState({ errors })\r\n            setTimeout(() => {\r\n                this.setState({ errors: null })\r\n            }, 4000)\r\n            return\r\n        }\r\n\r\n        await observationService.create(newObservation)\r\n            .then((savedObservation) =>\r\n                this.props.updateObservations(savedObservation)\r\n            )\r\n            .catch((error) => {\r\n                console.log(error)\r\n                this.props.updateObservations({ id: Math.floor(Math.random() * Math.floor(1000)), ...newObservation })\r\n            })\r\n        this.setState({ returnToIndex: true })\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.returnToIndex) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div>\r\n\r\n                <NavLink to='/'>Cancel</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                {this.state.errors ?\r\n                    <div>\r\n                        {this.state.errors.map(error =>\r\n                            <div className=\"alert alert-dismissible alert-danger\" key={error}>\r\n                                <button type=\"button\" className=\"close\" onClick={() => this.setState({errors: null})}>&times;</button>\r\n                                <strong>{error}</strong>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>}\r\n                <form onSubmit={this.addObservation}>\r\n                    <label>Species</label>\r\n                    <br></br>\r\n                    <input name='species' value={this.state.value} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Rarity</label>\r\n                    <br></br>\r\n                    <select name='rarity' value={this.state.rarity} onChange={this.handleChange}>\r\n                        <option key='Common' value='Common'>Common</option>\r\n                        <option key='Rare' value='Rare'>Rare</option>\r\n                        <option key='Extremely rare' value='Extremely rare'>Extremenly rare</option>\r\n                    </select>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Notes</label>\r\n                    <br></br>\r\n                    <input type='textarea' name='notes' value={this.state.notes} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <input type='submit' value='Submit'></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationForm","import React from 'react'\r\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lat: parseFloat(this.props.lat),\r\n            lng: parseFloat(this.props.lng)\r\n        }\r\n    }\r\n\r\n    \r\n  render() {\r\n    const MapWithMarker = withGoogleMap(props => (\r\n        <GoogleMap\r\n          defaultCenter = { this.state }\r\n          defaultZoom = { 10 }\r\n          mark\r\n        >\r\n        <Marker position={ this.state } />\r\n        </GoogleMap>\r\n     ));\r\n     \r\n    return (\r\n      <div>\r\n        <MapWithMarker\r\n          containerElement={ <div style={{ height: `250px`, width: '250px', marginLeft: 'auto', marginRight: 'auto' }} /> }\r\n          mapElement={ <div style={{ height: `100%` }} /> }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { Card, CardBody } from 'react-simple-card';\r\nimport Map from './Map';\r\nimport React from 'react';\r\n\r\nclass ObservationCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ...props.observation, extended: false\r\n        }\r\n    }\r\n\r\n    resize = () => {\r\n        this.setState(this.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    toggleExtended() {\r\n        this.setState({ ...this.state, extended: !this.state.extended })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.extended ?\r\n                    <Card className='cardReact'>\r\n                        <div onClick={() => this.toggleExtended()} >\r\n                        <h4>{this.state.species}</h4>\r\n                        \r\n                        <CardBody>\r\n                            <div onClick={() => this.toggleExtended()} style={{ cursor: \"pointer\" }}>\r\n                            Rarity: {this.state.rarity}<br></br>\r\n                            Location: {this.state.latitude}, {this.state.longitude}<br></br>\r\n                            Notes: {this.state.notes}<br></br>\r\n                            Observed: {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                second: '2-digit'\r\n\r\n                            }).format(new Date(this.state.time))}<br></br>\r\n                            </div>\r\n                            \r\n                        </CardBody>\r\n                        </div>\r\n                        <Map lat={this.state.latitude} lng={this.state.longitude}/>\r\n                    </Card>\r\n                    :\r\n                    <div onClick={() => this.toggleExtended()} >\r\n                    <Card className='cardReact'>\r\n                        <h4>{this.state.species}</h4> <br></br>\r\n                        {this.state.notes.substring(0, 15)}...\r\n                    </Card>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationCard","import React from 'react';\r\nimport ObservationCard from './ObservationCard';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass ListingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            observations: this.props.observations,\r\n            sortedBy: ['time (newest)', 'time (oldest)', 'species', 'rarity'],\r\n            sortNo: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sortObservations()\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props !== nextProps) {\r\n            this.setState({ observations: nextProps.observations })\r\n        }\r\n    }\r\n\r\n    sortObservations() {\r\n        const sortWith = this.state.sortedBy[this.state.sortNo];\r\n        let sortedObservations = this.state.observations\r\n        switch (sortWith) {\r\n            case 'time (newest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) > new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) < new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'time (oldest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) < new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) > new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'species':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.species.toString().toUpperCase() < b.species.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.species.toString().toUpperCase() > b.species.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'rarity':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.rarity.toString().toUpperCase() < b.rarity.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.rarity.toString().toUpperCase() > b.rarity.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        this.setState({ observations: sortedObservations })\r\n    }\r\n\r\n    async changeSorting() {\r\n        if (this.state.sortNo < 3) {\r\n            await this.setState({ sortNo: this.state.sortNo + 1 })\r\n        } else {\r\n            await this.setState({ sortNo: 0 })\r\n        }\r\n        this.sortObservations()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink to='/newobservation'>New observation</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                <button onClick={() => this.changeSorting()}>Sort by: {this.state.sortedBy[this.state.sortNo]}</button>\r\n                <br></br>\r\n                <br></br>\r\n                {this.state.observations.map(obs => <ObservationCard observation={obs} key={obs.id} />)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListingPage","import React from 'react';\nimport observationService from './services/observations';\nimport './App.css';\nimport ObservationForm from './components/ObservationForm';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport ListingPage from './components/ListingPage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      observations: null\n    }\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('postCache')\n  }\n\n  async componentDidMount() {\n    window.addEventListener('postCache', async () => {\n      if (this.state.observations) {\n          let obs = this.state.observations\n          let postedObs = JSON.parse(window.localStorage.getItem('postedObs'))\n          const newStateObservations = [...postedObs, ...obs]\n          await this.setState({ observations: newStateObservations })\n          window.localStorage.removeItem('postedObs')\n      }\n    })\n    let obs = []\n    obs = await observationService.getAll()\n      .catch(error => {\n        return JSON.parse(window.localStorage.getItem('observations'))\n      })\n    const localObservations = JSON.parse(window.localStorage.getItem('observations'))\n    if (obs !== localObservations && obs.length > 0) {\n      window.localStorage.setItem('observations', JSON.stringify(obs))\n      await this.setState({ observations: obs })\n    } else {\n      if (localObservations) {\n        await this.setState({ observations: localObservations })\n      } else {\n        await this.setState({ observations: [] })\n      }\n    }\n  }\n\n  updateObservations(newObservation) {\n    const obs = this.state.observations\n    obs.push(newObservation)\n    window.localStorage.setItem('observations', JSON.stringify(obs))\n    this.setState({ observations: obs })\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <h1>Birdnation</h1>\n            {this.state.observations && this.state.observations.length > 0 ?\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <ListingPage observations={this.state.observations}\n                    key='listingpage' />)}\n              />\n              :\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <div>\n                    <NavLink to='/newobservation'>New observation</NavLink>\n                    <br></br>\n                    <br></br>\n                    <p>No observations</p>\n                  </div>\n                )}\n              />\n\n            }\n            <Route\n              exact\n              path='/newobservation'\n              render={() => (\n                <ObservationForm updateObservations={this.updateObservations.bind(this)}\n                  key='newobservation' />)}\n            />\n\n\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    \n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nserviceWorker.register();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}