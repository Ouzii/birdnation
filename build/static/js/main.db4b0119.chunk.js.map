{"version":3,"sources":["services/observations.js","components/ObservationForm.js","components/Map.js","components/ObservationCard.js","components/ListingPage.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","interceptors","request","use","config","method","window","dispatchEvent","CustomEvent","detail","error","Promise","reject","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","get","headers","Content-Type","sent","abrupt","data","stop","this","apply","arguments","getOne","_ref2","_callee2","id","_context2","concat","_x","observations","create","_ref3","_callee3","newObject","_context3","post","_x2","remove","_ref4","_callee4","_context4","delete","_x3","ObservationForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCurrentPosition","options","length","undefined","resolve","navigator","geolocation","loadPosition","position","_position$coords","latitude","longitude","coords","t0","console","log","addObservation","event","newObservation","savedObservation","preventDefault","species","state","rarity","notes","time","Date","observationService","updateObservations","setState","returnToIndex","handleChange","defineProperty","target","name","value","react_default","createElement","Redirect","to","NavLink","onSubmit","onChange","key","type","React","Component","Map","lat","parseFloat","lng","_this2","MapWithMarker","withGoogleMap","react_google_maps_lib","defaultCenter","defaultZoom","containerElement","style","height","width","marginLeft","marginRight","mapElement","ObservationCard","resize","objectSpread","observation","extended","addEventListener","removeEventListener","lib","className","onClick","toggleExtended","cursor","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","components_Map","substring","ListingPage","sortedBy","sortNo","sortObservations","sortWith","sortedObservations","sort","b","toString","toUpperCase","sorted","changeSorting","map","obs","components_ObservationCard","App","catch","JSON","parse","localStorage","getItem","localObservations","setItem","stringify","push","BrowserRouter","Route","exact","path","render","components_ListingPage","components_ObservationForm","bind","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.db4b0119.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://birdnation.herokuapp.com/api/observations'\r\n\r\n  axios.interceptors.request.use(function (config) {\r\n    if (config.method === 'post') {\r\n        window.dispatchEvent(new CustomEvent('axios', { detail: config }))\r\n    }\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\nconst config = () => {\r\n    return {\r\n        headers: { 'Content-Type': 'Application/json' }\r\n    }\r\n}\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl, config())\r\n    return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`, config())\r\n    return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n    const response = await axios.post(baseUrl, newObject, config())\r\n    return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config())\r\n    return response\r\n}\r\n\r\nexport default { getAll, create, remove, getOne }","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport observationService from '../services/observations';\r\n\r\nclass ObservationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            species: '',\r\n            rarity: 'Common',\r\n            notes: '',\r\n            returnToIndex: false\r\n        }\r\n    }\r\n\r\n    getCurrentPosition = (options = {}) => {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n        })\r\n    }\r\n\r\n    loadPosition = async () => {\r\n        try {\r\n            const position = await this.getCurrentPosition()\r\n            const { latitude, longitude } = position.coords\r\n            return { latitude, longitude }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    addObservation = async (event) => {\r\n        event.preventDefault()\r\n        const position = await this.loadPosition()\r\n        const newObservation = {\r\n            species: this.state.species,\r\n            rarity: this.state.rarity,\r\n            notes: this.state.notes,\r\n            latitude: position.latitude,\r\n            longitude: position.longitude,\r\n            time: new Date()\r\n        }\r\n\r\n        const savedObservation = await observationService.create(newObservation)\r\n        this.props.updateObservations(savedObservation)\r\n        await this.setState({ returnToIndex: true })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.returnToIndex) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div>\r\n                \r\n                <NavLink to='/'>Cancel</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                <form onSubmit={this.addObservation}>\r\n                    <label>Species</label>\r\n                    <br></br>\r\n                    <input name='species' value={this.state.value} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Rarity</label>\r\n                    <br></br>\r\n                    <select name='rarity' value={this.state.rarity} onChange={this.handleChange}>\r\n                        <option key='Common' value='Common'>Common</option>\r\n                        <option key='Rare' value='Rare'>Rare</option>\r\n                        <option key='Extremely rare' value='Extremely rare'>Extremenly rare</option>\r\n                    </select>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <label>Notes</label>\r\n                    <br></br>\r\n                    <input type='textarea' name='notes' value={this.state.notes} onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <br></br>\r\n                    <input type='submit' value='Submit'></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationForm","import React from 'react'\r\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lat: parseFloat(this.props.lat),\r\n            lng: parseFloat(this.props.lng)\r\n        }\r\n    }\r\n\r\n    \r\n  render() {\r\n    const MapWithMarker = withGoogleMap(props => (\r\n        <GoogleMap\r\n          defaultCenter = { this.state }\r\n          defaultZoom = { 10 }\r\n          mark\r\n        >\r\n        <Marker position={ this.state } />\r\n        </GoogleMap>\r\n     ));\r\n     \r\n    return (\r\n      <div>\r\n        <MapWithMarker\r\n          containerElement={ <div style={{ height: `250px`, width: '250px', marginLeft: 'auto', marginRight: 'auto' }} /> }\r\n          mapElement={ <div style={{ height: `100%` }} /> }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { Card, CardBody } from 'react-simple-card';\r\nimport Map from './Map';\r\nimport React from 'react';\r\n\r\nclass ObservationCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ...props.observation, extended: false\r\n        }\r\n    }\r\n\r\n    resize = () => {\r\n        this.setState(this.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    toggleExtended() {\r\n        this.setState({ ...this.state, extended: !this.state.extended })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.extended ?\r\n                    <Card className='cardReact'>\r\n                        <div onClick={() => this.toggleExtended()} >\r\n                        <h4>{this.state.species}</h4>\r\n                        \r\n                        <CardBody>\r\n                            <div onClick={() => this.toggleExtended()} style={{ cursor: \"pointer\" }}>\r\n                            Rarity: {this.state.rarity}<br></br>\r\n                            Location: {this.state.latitude}, {this.state.longitude}<br></br>\r\n                            Notes: {this.state.notes}<br></br>\r\n                            Observed: {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                second: '2-digit'\r\n\r\n                            }).format(new Date(this.state.time))}<br></br>\r\n                            </div>\r\n                            \r\n                        </CardBody>\r\n                        </div>\r\n                        <Map lat={this.state.latitude} lng={this.state.longitude}/>\r\n                    </Card>\r\n                    :\r\n                    <div onClick={() => this.toggleExtended()} >\r\n                    <Card className='cardReact'>\r\n                        <h4>{this.state.species}</h4> <br></br>\r\n                        {this.state.notes.substring(0, 15)}...\r\n                    </Card>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObservationCard","import React from 'react';\r\nimport ObservationCard from './ObservationCard';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass ListingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            observations: this.props.observations,\r\n            sortedBy: ['time (newest)', 'time (oldest)', 'species', 'rarity'],\r\n            sortNo: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sortObservations()\r\n    }\r\n\r\n    sortObservations() {\r\n        const sortWith = this.state.sortedBy[this.state.sortNo];\r\n        let sortedObservations = this.state.observations\r\n        switch (sortWith) {\r\n            case 'time (newest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) > new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) < new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'time (oldest)':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (new Date(a.time) < new Date(b.time)) {\r\n                        return -1\r\n                    } else if (new Date(a.time) > new Date(b.time)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'species':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.species.toString().toUpperCase() < b.species.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.species.toString().toUpperCase() > b.species.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            case 'rarity':\r\n                sortedObservations.sort((a, b) => {\r\n                    if (a.rarity.toString().toUpperCase() < b.rarity.toString().toUpperCase()) {\r\n                        return -1\r\n                    } else if (a.rarity.toString().toUpperCase() > b.rarity.toString().toUpperCase()) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        this.setState({ observations: sortedObservations, sorted: true })\r\n    }\r\n\r\n    async changeSorting() {\r\n        if (this.state.sortNo < 3) {\r\n            await this.setState({ sortNo: this.state.sortNo + 1 })\r\n        } else {\r\n            await this.setState({ sortNo: 0 })\r\n        }\r\n        this.sortObservations()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink to='/newobservation'>New observation</NavLink>\r\n                <br></br>\r\n                <br></br>\r\n                <button onClick={() => this.changeSorting()}>Sort by: {this.state.sortedBy[this.state.sortNo]}</button>\r\n                <br></br>\r\n                <br></br>\r\n                {this.state.observations.map(obs => <ObservationCard observation={obs} key={obs.id} />)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListingPage","import React from 'react';\nimport observationService from './services/observations';\nimport './App.css';\nimport ObservationForm from './components/ObservationForm';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport ListingPage from './components/ListingPage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      observations: null\n    }\n  }\n\n\n  async componentDidMount() {\n    let obs = []\n    obs = await observationService.getAll()\n      .catch(error => {\n        return JSON.parse(window.localStorage.getItem('observations'))\n      })\n    const localObservations = JSON.parse(window.localStorage.getItem('observations'))\n    if (obs !== localObservations && obs.length > 0) {\n      window.localStorage.setItem('observations', JSON.stringify(obs))\n      await this.setState({ observations: obs })\n    } else {\n      if (localObservations) {\n        await this.setState({ observations: localObservations })\n      } else {\n        await this.setState({ observations: [] })\n      }\n    }\n  }\n\n  updateObservations(newObservation) {\n    const obs = this.state.observations\n    obs.push(newObservation)\n    window.localStorage.setItem('observations', JSON.stringify(obs))\n    this.setState({ observations: obs })\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <h1>Birdnation</h1>\n            {this.state.observations && this.state.observations.length > 0 ?\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <ListingPage observations={this.state.observations}\n                    key='listingpage' />)}\n              />\n              :\n              <Route\n                exact\n                path='/'\n                render={() => (\n                  <div>\n                    <NavLink to='/newobservation'>New observation</NavLink>\n                    <br></br>\n                    <br></br>\n                    <p>No observations</p>\n                  </div>\n                )}\n              />\n\n            }\n            <Route\n              exact\n              path='/newobservation'\n              render={() => (\n                <ObservationForm updateObservations={this.updateObservations.bind(this)}\n                  key='newobservation' />)}\n            />\n\n\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    \n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nserviceWorker.register();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}